{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n     const startBtn = document.querySelector('[data-start]');\n        const input = document.querySelector('#datetime-picker');\n        const daysSpan = document.querySelector('[data-days]');\n        const hoursSpan = document.querySelector('[data-hours]');\n        const minutesSpan = document.querySelector('[data-minutes]');\n        const secondsSpan = document.querySelector('[data-seconds]');\n\n        let selectedDate = null;\n        let timerId = null;\n\n        const fp = flatpickr(input, {\n            enableTime: true,\n            time_24hr: true,\n            defaultDate: new Date(),\n            minuteIncrement: 1,\n            onClose(selectedDates) {\n                selectedDate = selectedDates[0];\n                if (selectedDate > new Date()) {\n                    startBtn.disabled = false;\n                } else {\n                    alert('Please choose a date in the future');\n                    startBtn.disabled = true;\n                }\n            },\n        });\n\n        startBtn.addEventListener('click', () => {\n            startBtn.disabled = true;\n            timerId = setInterval(() => {\n                const now = new Date();\n                const delta = selectedDate - now;\n\n                if (delta <= 0) {\n                    clearInterval(timerId);\n                    updateTimer(0);\n                    return;\n                }\n\n                updateTimer(delta);\n            }, 1000);\n        });\n\n        function updateTimer(ms) {\n            const time = convertMs(ms);\n            daysSpan.textContent = addLeadingZero(time.days);\n            hoursSpan.textContent = addLeadingZero(time.hours);\n            minutesSpan.textContent = addLeadingZero(time.minutes);\n            secondsSpan.textContent = addLeadingZero(time.seconds);\n        }\n\n        function addLeadingZero(value) {\n            return String(value).padStart(2, '0');\n        }\n\n        function convertMs(ms) {\n            const second = 1000;\n            const minute = second * 60;\n            const hour = minute * 60;\n            const day = hour * 24;\n\n            const days = Math.floor(ms / day);\n            const hours = Math.floor((ms % day) / hour);\n            const minutes = Math.floor(((ms % day) % hour) / minute);\n            const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n            return { days, hours, minutes, seconds };\n        }"],"names":["startBtn","input","daysSpan","hoursSpan","minutesSpan","secondsSpan","selectedDate","timerId","selectedDates","delta","updateTimer","ms","time","convertMs","addLeadingZero","value","days","hours","minutes","seconds"],"mappings":"0uBAIK,MAAMA,EAAW,SAAS,cAAc,cAAc,EAC7CC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAW,SAAS,cAAc,aAAa,EAC/CC,EAAY,SAAS,cAAc,cAAc,EACjDC,EAAc,SAAS,cAAc,gBAAgB,EACrDC,EAAc,SAAS,cAAc,gBAAgB,EAE3D,IAAIC,EAAe,KACfC,EAAU,KAEH,UAAUN,EAAO,CACxB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQO,EAAe,CACnBF,EAAeE,EAAc,CAAC,EAC1BF,EAAe,IAAI,KACnBN,EAAS,SAAW,IAEpB,MAAM,oCAAoC,EAC1CA,EAAS,SAAW,GAE3B,CACb,CAAS,EAEDA,EAAS,iBAAiB,QAAS,IAAM,CACrCA,EAAS,SAAW,GACpBO,EAAU,YAAY,IAAM,CAExB,MAAME,EAAQH,EADF,IAAI,KAGhB,GAAIG,GAAS,EAAG,CACZ,cAAcF,CAAO,EACrBG,EAAY,CAAC,EACb,MACH,CAEDA,EAAYD,CAAK,CACpB,EAAE,GAAI,CACnB,CAAS,EAED,SAASC,EAAYC,EAAI,CACrB,MAAMC,EAAOC,EAAUF,CAAE,EACzBT,EAAS,YAAcY,EAAeF,EAAK,IAAI,EAC/CT,EAAU,YAAcW,EAAeF,EAAK,KAAK,EACjDR,EAAY,YAAcU,EAAeF,EAAK,OAAO,EACrDP,EAAY,YAAcS,EAAeF,EAAK,OAAO,CACxD,CAED,SAASE,EAAeC,EAAO,CAC3B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACvC,CAED,SAASF,EAAUF,EAAI,CAMnB,MAAMK,EAAO,KAAK,MAAML,EAAK,KAAG,EAC1BM,EAAQ,KAAK,MAAON,EAAK,MAAO,IAAI,EACpCO,EAAU,KAAK,MAAQP,EAAK,MAAO,KAAQ,GAAM,EACjDQ,EAAU,KAAK,MAASR,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAK,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAClD"}